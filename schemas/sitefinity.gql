type CultureModel {
  Name: String
  DisplayName: String
}

type SiteDataSourceLinkViewModel {
  Id: String
  IsDefault: Boolean
  IsGlobalProvider: Boolean
  ProviderName: String
  ProviderTitle: String
  SiteId: String
  DataSourceName: String
}

type DataSourceConfiguration {
  IsChecked: Boolean
  Links: [DataSourceLinkConfiguration]
  Name: String
}

type SectionGroup {
  Name: String
  Sections: [Section]
}

type TaxonDTO {
  TaxonomyId: String
  Title: String
  UrlName: String
  AvailableLanguages: [String]
  Description: String
  Id: String
  LastModified: Datetime
  Name: String
}

type Result {
  Key: String
  Title: String
  Description: String
  ImageUrl: String
}

type RuleAction {
  Action: FormRuleAction
  Target: String
}

type FlatTaxon {
  Name: String
  Provider: String
  TaxonomyId: String
  Title: String
  UrlName: String
  AppliedTo: Int
  Description: String
  Id: ID
  LastModified: Datetime
  Ordinal: Float
  Synonyms: String
}

input FlatTaxonInput {
  Name: String
  Provider: String
  TaxonomyId: String
  AppliedTo: Int
  Description: String
  Id: String
  LastModified: Datetime
  Ordinal: Float
  Synonyms: String
  Title: String
  UrlName: String
}

type Template {
  Name: String
  Renderer: String
  ThumbnailUrl: String
  Title: String
  UsedByNumberOfPages: Int
  Framework: PageTemplateFramework
  Id: String
  LayoutPath: String
}

type TemplateStatistic {
  Count: Int
  Name: String
}

type SortItem {
  Name: String
  Value: String
}

type MarkedItem {
  ContentType: String
  ContentTypeInfo: TypeInfo
  LockedStatus: ItemEventInfo
  Provider: String
  Title: String
  AvailableLanguages: [String]
  DisplayStatus: [DisplayStatus]
  Id: String
  LastPublished: PublicationInfo
}

type DisplayStatus {
  DetailedLabel: String
  ExpirationDate: Datetime
  Label: String
  Name: String
  Date: Datetime
  Id: String
  Message: Message
  PublicationDate: Datetime
  Source: String
  User: String
}

enum AddressFieldMode {
  FormOnly @meta(value: 0, valueType: int32)
  Hybrid @meta(value: 2, valueType: int32)
  MapOnly @meta(value: 1, valueType: int32)
}

type AnalyticsDto {
  AnalyticsUrl: String
  Id: String
}

type DocumentLibrary {
  BlobStorageProvider: String
  ClientCacheProfile: String
  CoverId: String
  Description: String
  DateCreated: Datetime
  LastModified: Datetime
  ParentId: String
  ThumbnailProfiles: [String]
  IncludeInSitemap: Boolean
  MaxSize: Int
  OutputCacheProfile: String
  Title: String
  PublicationDate: Datetime
  UrlName: String
  ChildrenCount: Int
  Id: ID
  ItemDefaultUrl: String
  MaxItemSize: Int
  Provider: String
}

input DocumentLibraryInput {
  DateCreated: Datetime
  LastModified: Datetime
  ParentId: String
  ThumbnailProfiles: [String]
  IncludeInSitemap: Boolean
  MaxSize: Int
  OutputCacheProfile: String
  Title: String
  PublicationDate: Datetime
  UrlName: String
  ChildrenCount: Int
  Id: String
  ItemDefaultUrl: String
  MaxItemSize: Int
  Provider: String
  BlobStorageProvider: String
  ClientCacheProfile: String
  CoverId: String
  Description: String
}

type DefaultAddWidgetContext {
  Name: String
  ParentPlaceholderKey: String
  PlaceholderName: String
  Properties: [PropertyValueContainer]
  SiblingKey: String
  Id: String
}

type PageScriptAttribute {
  Key: String
  Value: String
}

type FieldSettingsContext {
  FieldSettings: [FieldSettings]
}

type Calendar {
  ExpirationDate: Datetime
  Id: ID
  LastModified: Datetime
  UrlName: String
  Description: String
  DateCreated: Datetime
  Provider: String
  PublicationDate: Datetime
  Title: String
  Color: String
}

input CalendarInput {
  LastModified: Datetime
  UrlName: String
  Description: String
  ExpirationDate: Datetime
  Id: String
  PublicationDate: Datetime
  Title: String
  Color: String
  DateCreated: Datetime
  Provider: String
}

type SharedInLocation {
  DisplayStatus: [DisplayStatus]
  IsPage: Boolean
  SiteId: String
  Title: String
  Url: String
  Breadcrumb: [String]
}

type ItemEventInfo {
  User: String
  Date: Datetime
  Id: String
}

type Video {
  Tags: [String]
  ThumbnailUrl: String
  UrlName: String
  DateCreated: Datetime
  Description: String
  Extension: String
  Parent: VideoLibrary
  ParentId: String
  Provider: String
  Url: String
  Category: [String]
  FolderId: String
  Height: Int
  LastModified: Datetime
  Width: Int
  IncludeInSitemap: Boolean
  MimeType: String
  Ordinal: Float
  Title: String
  TotalSize: Int
  Author: String
  Id: ID
  ItemDefaultUrl: String
  PublicationDate: Datetime
}

input VideoInput {
  Id: String
  ItemDefaultUrl: String
  PublicationDate: Datetime
  TotalSize: Int
  Author: String
  Description: String
  Extension: String
  Tags: [String]
  ThumbnailUrl: String
  UrlName: String
  DateCreated: Datetime
  FolderId: String
  Height: Int
  LastModified: Datetime
  ParentId: String
  Provider: String
  Url: String
  Category: [String]
  MimeType: String
  Ordinal: Float
  Title: String
  Width: Int
  IncludeInSitemap: Boolean
}

type ServiceHookActivityDto {
  ServiceHookTitle: String
  TriggeredByContentItem: Boolean
  ServiceHookId: String
  StartTime: Datetime
  Status: ServiceHookActivityStatus
  Title: String
  Duration: Float
  Id: String
  Result: String
}

type WcfScheduledTask {
  IsManageable: Boolean
  ProgressStatus: Int
  TaskData: String
  TaskName: String
  ConcurrentTaskKey: String
  Description: String
  Id: String
  Status: TaskStatus
  StatusMessage: String
  Title: String
}

type ValidationRequest {
}

type ParentTemplate {
  Id: String
  Renderer: String
  Title: String
}

type ValidationResult {
  Errors: ValidationErrors
}

enum ContentUIStatus {
  Draft @meta(value: 0, valueType: int32)
  NotSupported @meta(value: 666, valueType: int32)
  PrivateCopy @meta(value: 1, valueType: int32)
  Published @meta(value: 2, valueType: int32)
  Scheduled @meta(value: 3, valueType: int32)
}

type Address {
  CountryCode: String
  MapZoomLevel: Int
  StateCode: String
  Street: String
  Zip: String
  City: String
  Id: String
  Latitude: Float
  Longitude: Float
}

type ExtendedMediaLink {
  FileId: String
  TotalSize: Int
  ChunkSize: Int
  Cultures: [String]
  DefaultUrl: String
  Extension: String
  Height: Int
  NumberOfChunks: Int
  Url: String
  ApplicationName: String
  Id: String
  MediaFileUrlName: String
  ThumbnailUrl: String
  Width: Int
  Culture: Int
  MediaContentId: String
  MimeType: String
  Title: String
  FilePath: String
}

type ParentOperationInfo {
  Name: String
  Required: Boolean
}

type ServiceHook {
  Title: String
  Trigger: ParameterizedSetting
  Action: ParameterizedSetting
  FailedRunsCount: Int
  Id: ID
  SuccessfulRunsCount: Int
}

input ServiceHookInput {
  SuccessfulRunsCount: Int
  Title: String
  Trigger: ParameterizedSetting
  Action: ParameterizedSetting
  FailedRunsCount: Int
  Id: String
}

type SharePreviewLink {
  ExpirationMessage: String
  PreviewLink: String
}

type ValidationErrors {
}

type Step {
  Key: String
  Value: String
}

type FormRule {
  Actions: [RuleAction]
  Conditions: [RuleCondition]
  Operator: LogicalOperator
}

type WidgetOperationResult {
  Type: NotificationType
  AvailableActions: [String]
  FailedItemsIds: [String]
  MultipleItemsMessage: String
  State: WidgetState
  Success: Boolean
  UndoOperation: ItemOperation
  Link: String
  Message: String
  Properties: [PropertyValueContainer]
  SucceededItemsIds: [String]
  Title: String
}

type Message {
  Description: String
  Operations: [ItemOperation]
  Title: String
}

type ParameterArgument {
  Value: String
  Warning: String
  AdditionalValue: String
  AdditionalValueLabel: String
  Label: String
}

type PageDtoWithContext {
  ComponentContext: ComponentContext
  Culture: String
  DetailItem: ResolvedDetailItem
  Id: String
  Scripts: [PageScript]
  SiteId: String
  TemplateName: String
  UrlParameters: [String]
}

type ResolvedDetailItem {
  ProviderName: String
  ErrorMessage: String
  Id: String
  ItemType: String
}

type AvailableAction {
  Key: FormRuleAction
  Value: String
}

type OperationParameter {
  Name: String
  Placeholder: String
  Title: String
  Tooltip: String
  Type: String
  FriendlyTitle: String
  Hint: String
  Required: Boolean
  Value: String
  Arguments: [ParameterArgument]
}

type DiagnosticsDto {
  HelpLink: String
  Message: String
  Name: String
  Success: Boolean
}

type Author {
  UrlName: String
  Avatar: Image
  DateCreated: Datetime
  IncludeInSitemap: Boolean
  ItemDefaultUrl: String
  Name: String
  Provider: String
  PublicationDate: Datetime
  Bio: String
  Id: ID
  JobTitle: String
  LastModified: Datetime
}

input AuthorInput {
  Bio: String
  Id: String
  JobTitle: String
  LastModified: Datetime
  PublicationDate: Datetime
  UrlName: String
  DateCreated: Datetime
  IncludeInSitemap: Boolean
  ItemDefaultUrl: String
  Name: String
  Provider: String
}

type FilterParameters {
}

enum PostRights {
  RegisteredUsers @meta(value: 2, valueType: int32)
  Everyone @meta(value: 1, valueType: int32)
  None @meta(value: 0, valueType: int32)
}

type ItemOperation {
  Description: String
  GroupName: String
  Title: String
  Warning: String
  RequiresItemUpdate: Boolean
  SubText: String
  Category: OperationCategory
  ContextParameters: [OperationContextParameter]
  HasLinkResult: Boolean
  IsGroup: Boolean
  Ordinal: Int
  ParentOperation: ParentOperationInfo
  Link: String
  Name: String
  PerformsDelete: Boolean
  RequiresConfirmation: Boolean
  Actions: [OperationAction]
  DetailedTitle: String
  ExecuteOnServer: Boolean
  KeepFocus: Boolean
  Parameters: [OperationParameter]
  SubOperation: ItemOperation
}

type SitemapPage {
  EditUrl: String
  IsHomePage: Boolean
  PageType: PageType
  Renderer: String
  Children: [SitemapPage]
  HasChildren: Boolean
  Title: String
  AvailableLanguages: [String]
  Id: String
  LastModified: Datetime
  LastModifiedBy: String
  LockedStatus: ItemEventInfo
  ViewUrl: String
  BreadCrumb: [String]
  DateCreated: Datetime
  DisplayStatus: [DisplayStatus]
  Marketing: MarketingPropertyValue
  ParentId: String
  CreatedBy: String
}

type ValidationContainer {
}

type Operator {
  Key: ConditionOperator
  Value: String
}

type Document {
  FolderId: String
  LastModified: Datetime
  MimeType: String
  Parent: DocumentLibrary
  Author: String
  DateCreated: Datetime
  Description: String
  Extension: String
  Provider: String
  Tags: [String]
  ThumbnailUrl: String
  IncludeInSitemap: Boolean
  PublicationDate: Datetime
  Title: String
  TotalSize: Int
  UrlName: String
  Id: ID
  Image: Image
  ItemDefaultUrl: String
  Ordinal: Float
  Category: [String]
  ParentId: String
  Parts: String
  Url: String
}

input DocumentInput {
  IncludeInSitemap: Boolean
  PublicationDate: Datetime
  UrlName: String
  Id: String
  ItemDefaultUrl: String
  Ordinal: Float
  Title: String
  TotalSize: Int
  Category: [String]
  ParentId: String
  Parts: String
  Url: String
  MimeType: String
  Author: String
  DateCreated: Datetime
  Description: String
  Extension: String
  FolderId: String
  LastModified: Datetime
  Provider: String
  Tags: [String]
  ThumbnailUrl: String
}

enum SiteConfigurationMode {
  ConfigureByDeployment @meta(value: 1, valueType: int32)
  ConfigureManually @meta(value: 0, valueType: int32)
}

type AuthSettings {
  Scope: String
}

type Folder {
  Breadcrumb: [String]
  ImagesUrl: [String]
  ParentId: String
  RootId: String
  Title: String
  ChildrenCount: Int
  FoldersCount: Int
  Id: String
  LastModified: Datetime
}

type FrontendPageNodeExtended {
  Title: String
  Url: String
  ChildNodes: [FrontendPageNodeExtended]
  HasChildOpen: Boolean
  IsCurrentlyOpened: Boolean
  Key: String
  LinkTarget: String
  PageSiteMapNode: FrontendSitemapPage
}

type FrontendSitemapPage {
  BreadCrumb: [String]
  Children: [FrontendSitemapPage]
  HasChildren: Boolean
  Id: String
  PageType: PageType
  Title: String
  ViewUrl: String
  AvailableLanguages: [String]
  ParentId: String
  IsHomePage: Boolean
}

enum PageType {
  Standard @meta(value: 0, valueType: int32)
  Group @meta(value: 1, valueType: int32)
  Redirect @meta(value: 2, valueType: int32)
}

type CountryModel {
  states: [StateModel]
  hasStates: Boolean
  isoCode: String
  name: String
}

type MarketingPropertyValue {
  Description: String
  Link: String
  LinkTitle: String
}

type OperationContextParameter {
  Name: String
  Value: String
}

type SiteConfigurationViewModel {
  IsAllowedStartStop: Boolean
  IsCurrentSite: Boolean
  RequiresSsl: Boolean
  SystemCultures: [CultureViewModel]
  DomainAliases: [String]
  Id: String
  Name: String
  RedirectIfOffline: Boolean
  SiteConfigurationMode: SiteConfigurationMode
  FrontEndLoginPageId: String
  FrontEndLoginPageUrl: String
  OfflinePageToRedirect: String
  SiteMapRootNodeId: String
  HomePageId: String
  LiveUrl: String
  IsOffline: Boolean
  OfflineSiteMessage: String
  PublicContentCultures: [CultureViewModel]
  SourcePagesSiteId: String
  StagingUrl: String
  UseSystemCultures: Boolean
  DataSources: [SiteDataSourceConfigViewModel]
  IsDefault: Boolean
}

type ReorderAction {
  Id: String
  Position: ReorderPosition
  TargetId: String
}

enum CanonicalUrlSettings {
  Default @meta(value: 0, valueType: int32)
  Disabled @meta(value: 1, valueType: int32)
  Enabled @meta(value: 2, valueType: int32)
}

type Lstring {
  PersistedValue: String
  Value: String
}

type PageTemplate {
  Title: String
  Id: ID
  LastModified: Datetime
  Name: String
  ParentTemplate: ParentTemplate
  Provider: String
  TemplateId: String
  DateCreated: Datetime
  Framework: PageTemplateFramework
  Renderer: String
  TemplateName: String
  Thumbnail: String
  ThumbnailUrl: String
}

input PageTemplateInput {
  Id: String
  LastModified: Datetime
  Name: String
  ParentTemplate: ParentTemplate
  Provider: String
  TemplateId: String
  Title: String
  DateCreated: Datetime
  Framework: PageTemplateFramework
  Renderer: String
  TemplateName: String
  Thumbnail: String
  ThumbnailUrl: String
}

type PropertiesModel {
}

enum TaskStatus {
  Failed @meta(value: 2, valueType: int32)
  Pending @meta(value: 0, valueType: int32)
  Started @meta(value: 1, valueType: int32)
  Stopped @meta(value: 3, valueType: int32)
}

type Section {
  Name: String
  Properties: [PropertyContainer]
  Title: String
}

type TypeInfo {
  DisplayName: String
  ProviderDisplayName: String
}

type BreadcrumbItem {
  Title: String
  FolderId: String
}

type VideoLibrary {
  IncludeInSitemap: Boolean
  MaxSize: Int
  OutputCacheProfile: String
  PublicationDate: Datetime
  MaxItemSize: Int
  ParentId: String
  ThumbnailProfiles: [String]
  ChildrenCount: Int
  DateCreated: Datetime
  Description: String
  Id: ID
  ClientCacheProfile: String
  LastModified: Datetime
  Title: String
  UrlName: String
  BlobStorageProvider: String
  CoverId: String
  ItemDefaultUrl: String
  Provider: String
}

input VideoLibraryInput {
  MaxItemSize: Int
  ParentId: String
  ThumbnailProfiles: [String]
  ChildrenCount: Int
  DateCreated: Datetime
  Description: String
  Id: String
  ClientCacheProfile: String
  LastModified: Datetime
  Title: String
  UrlName: String
  BlobStorageProvider: String
  CoverId: String
  ItemDefaultUrl: String
  Provider: String
  IncludeInSitemap: Boolean
  MaxSize: Int
  OutputCacheProfile: String
  PublicationDate: Datetime
}

enum PageTemplateFramework {
  Mvc @meta(value: 1, valueType: int32)
  WebForms @meta(value: 2, valueType: int32)
  Hybrid @meta(value: 0, valueType: int32)
}

type StateModel {
  abbreviation: String
  countryKey: String
  stateProvinceName: String
}

type CultureViewModel {
  IsDefault: Boolean
  Key: String
  UICulture: String
  Culture: String
  FieldSuffix: String
  ShortName: String
  SitesNames: [String]
  SitesUsingCultureAsDefault: [String]
  DisplayName: String
}

type Testimonial {
  ItemDefaultUrl: String
  TestimonialAuthor: String
  PublicationDate: Datetime
  Id: ID
  IncludeInSitemap: Boolean
  JobTitle: String
  Photo: Image
  UrlName: String
  Company: String
  DateCreated: Datetime
  Quote: String
  Title: String
  LastModified: Datetime
  Provider: String
}

input TestimonialInput {
  Provider: String
  Quote: String
  Title: String
  LastModified: Datetime
  TestimonialAuthor: String
  ItemDefaultUrl: String
  IncludeInSitemap: Boolean
  PublicationDate: Datetime
  Id: String
  DateCreated: Datetime
  JobTitle: String
  UrlName: String
  Company: String
}

type Event {
  Parent: Calendar
  ParentId: String
  Comments: [CommentContract]
  ContactCell: String
  ContactName: String
  Content: String
  IncludeInSitemap: Boolean
  ItemDefaultUrl: String
  City: String
  ContactPhone: String
  ContactWeb: String
  Description: String
  EventEndUtcOffset: Float
  Tags: [String]
  State: String
  AllDayEvent: Boolean
  AllowComments: Boolean
  ContactEmail: String
  Country: String
  DateCreated: Datetime
  Id: ID
  EventEnd: Datetime
  Provider: String
  Category: [String]
  EventEndWithOffset: Datetime
  EventStartUtcOffset: Float
  Street: String
  Title: String
  PublicationDate: Datetime
  EventStart: Datetime
  Summary: String
  TimeZoneId: String
  UrlName: String
  EventStartWithOffset: Datetime
  IsRecurrent: Boolean
  LastModified: Datetime
  Location: String
  RecurrenceExpression: String
}

input EventInput {
  PublicationDate: Datetime
  UrlName: String
  EventStart: Datetime
  Summary: String
  TimeZoneId: String
  Location: String
  RecurrenceExpression: String
  EventStartWithOffset: Datetime
  IsRecurrent: Boolean
  LastModified: Datetime
  Content: String
  IncludeInSitemap: Boolean
  ItemDefaultUrl: String
  ParentId: String
  Comments: [CommentContract]
  ContactCell: String
  ContactName: String
  Description: String
  EventEndUtcOffset: Float
  Tags: [String]
  City: String
  ContactPhone: String
  ContactWeb: String
  Country: String
  DateCreated: Datetime
  Id: String
  State: String
  AllDayEvent: Boolean
  AllowComments: Boolean
  ContactEmail: String
  EventEnd: Datetime
  Provider: String
  Street: String
  Title: String
  Category: [String]
  EventEndWithOffset: Datetime
  EventStartUtcOffset: Float
}

type FormDraft {
  AvailableActions: [AvailableAction]
  Fields: [FormField]
  LastModified: Datetime
  Provider: String
  Rules: [FormRule]
  Steps: [Step]
  Title: String
  Id: ID
  Name: String
  SuccessMessage: String
}

input FormDraftInput {
  Rules: [FormRule]
  Steps: [Step]
  Title: String
  AvailableActions: [AvailableAction]
  Fields: [FormField]
  LastModified: Datetime
  Provider: String
  Id: String
  Name: String
  SuccessMessage: String
}

type MediaContent {
  Description: Lstring
  ItemDefaultUrl: Lstring
  PublicationDate: Datetime
  ThumbnailNames: [String]
  Version: Int
  VotesSum: Decimal
  AvailableLanguages: [String]
  EmbedUrl: String
  Owner: String
  Author: Lstring
  DateCreated: Datetime
  EmailAuthor: Boolean
  IncludeInSitemap: Boolean
  ParentId: String
  ThumbnailUrl: String
  AllowTrackBacks: Boolean
  DefaultPageId: String
  PostRights: PostRights
  Title: Lstring
  TotalSize: Int
  Visible: Boolean
  ApprovalWorkflowState: Lstring
  ApproveComments: Boolean
  MediaFileUrlName: Lstring
  OriginalContentId: String
  UrlName: Lstring
  BlobStorageProvider: String
  Extension: String
  Id: String
  Status: ContentLifecycleStatus
  VotesCount: Int
  AllowComments: Boolean
  ExpirationDate: Datetime
  FolderId: String
  LastModifiedBy: String
  MediaUrl: String
  UIStatus: ContentUIStatus
  ViewsCount: Int
}

type LockContext {
  Version: Int
}

type WidgetState {
  Name: String
  WidgetSegmentId: String
  DeleteAllowed: Boolean
  EditAllowed: Boolean
  IsPersonalized: Boolean
  Key: String
  LabelTooltip: String
  MoveAllowed: Boolean
}

type NewsItem {
  DateCreated: Datetime
  ItemDefaultUrl: String
  OpenGraphImage: String
  PublicationDate: Datetime
  SourceSite: String
  UrlName: String
  IncludeInSitemap: Boolean
  OpenGraphDescription: String
  Provider: String
  Summary: String
  Title: String
  Comments: [CommentContract]
  Description: String
  OpenGraphTitle: String
  Tags: [String]
  Thumbnail: Image
  Id: ID
  LastModified: Datetime
  SourceName: String
  AllowComments: Boolean
  Author: String
  Category: [String]
  Content: String
  Featured: Boolean
}

input NewsItemInput {
  Tags: [String]
  Comments: [CommentContract]
  Description: String
  OpenGraphTitle: String
  Content: String
  Featured: Boolean
  Id: String
  LastModified: Datetime
  SourceName: String
  AllowComments: Boolean
  Author: String
  Category: [String]
  PublicationDate: Datetime
  SourceSite: String
  DateCreated: Datetime
  ItemDefaultUrl: String
  OpenGraphImage: String
  Summary: String
  Title: String
  UrlName: String
  IncludeInSitemap: Boolean
  OpenGraphDescription: String
  Provider: String
}

type TimeZoneModel {
  id: String
  name: String
}

type FormField {
  Type: String
  Values: [String]
  Hideable: Boolean
  Id: String
  InputType: String
  Operators: [Operator]
  Title: String
}

type ChoiceValue {
  Name: String
  Title: String
  Value: String
}

type Void {
}

enum FormRuleAction {
  ShowMessage @meta(value: 4, valueType: int32)
  Skip @meta(value: 2, valueType: int32)
  GoTo @meta(value: 3, valueType: int32)
  Hide @meta(value: 1, valueType: int32)
  SendNotification @meta(value: 5, valueType: int32)
  Show @meta(value: 0, valueType: int32)
}

type Album {
  ThumbnailProfiles: [String]
  LastModified: Datetime
  MaxSize: Int
  ResizeOnUpload: Boolean
  ParentId: String
  PublicationDate: Datetime
  UrlName: String
  CoverId: String
  DateCreated: Datetime
  Description: String
  ItemDefaultUrl: String
  MaxItemSize: Int
  NewSize: String
  OutputCacheProfile: String
  BlobStorageProvider: String
  Id: ID
  IncludeInSitemap: Boolean
  Title: String
  ChildrenCount: Int
  ClientCacheProfile: String
  Provider: String
}

input AlbumInput {
  Id: String
  IncludeInSitemap: Boolean
  ItemDefaultUrl: String
  MaxItemSize: Int
  NewSize: String
  OutputCacheProfile: String
  BlobStorageProvider: String
  ClientCacheProfile: String
  Provider: String
  Title: String
  ChildrenCount: Int
  MaxSize: Int
  ResizeOnUpload: Boolean
  ThumbnailProfiles: [String]
  LastModified: Datetime
  DateCreated: Datetime
  Description: String
  ParentId: String
  PublicationDate: Datetime
  UrlName: String
  CoverId: String
}

enum LocalizationStrategy {
  NotSelected @meta(value: 0, valueType: int32)
  Split @meta(value: 1, valueType: int32)
  Synced @meta(value: 2, valueType: int32)
}

type PageScript {
  Attributes: [PageScriptAttribute]
  Source: String
  Value: String
}

type HierarchicalTaxon {
  Ordinal: Float
  ParentId: String
  Synonyms: String
  TaxonomyId: String
  UrlName: String
  AppliedTo: Int
  Description: String
  LastModified: Datetime
  Name: String
  Provider: String
  Title: String
  FullUrl: String
  Id: ID
}

input HierarchicalTaxonInput {
  FullUrl: String
  Id: String
  LastModified: Datetime
  Name: String
  Provider: String
  Title: String
  UrlName: String
  AppliedTo: Int
  Description: String
  Ordinal: Float
  ParentId: String
  Synonyms: String
  TaxonomyId: String
}

type PublicationInfo {
  Date: Datetime
  User: String
}

type Location {
  Id: ID
  Phone: String
  Provider: String
  Title: String
  Fax: String
  WorkingHours: String
  Image: Image
  LastModified: Datetime
  UrlName: String
  Address: Address
  Email: String
  IncludeInSitemap: Boolean
  ItemDefaultUrl: String
  PublicationDate: Datetime
  DateCreated: Datetime
}

input LocationInput {
  DateCreated: Datetime
  Email: String
  IncludeInSitemap: Boolean
  ItemDefaultUrl: String
  PublicationDate: Datetime
  Fax: String
  Id: String
  Phone: String
  Provider: String
  Title: String
  WorkingHours: String
  Address: Address
  LastModified: Datetime
  UrlName: String
}

type RuleCondition {
  Operator: ConditionOperator
  Value: String
  Id: String
}

type DiagnosticResult {
  Diagnostics: [DiagnosticsDto]
}

type ComponentsResponse {
  Components: [ComponentDto]
}

type SharedInSiteModel {
  Id: String
  IsShared: Boolean
  Name: String
}

type ControlMetadata {
  Caption: String
  Name: String
  PropertyMetadata: [SectionGroup]
  PropertyMetadataFlat: [PropertyContainer]
  ViewName: String
}

enum TextPosition {
  Left @meta(value: 1, valueType: int32)
  Right @meta(value: 2, valueType: int32)
}

enum ContentLifecycleStatus {
  Temp @meta(value: 1, valueType: int32)
  Deleted @meta(value: 4, valueType: int32)
  Live @meta(value: 2, valueType: int32)
  Master @meta(value: 0, valueType: int32)
  PartialTemp @meta(value: 8, valueType: int32)
}

type DataSourceLinkConfiguration {
  IsDefault: Boolean
  ProviderName: String
}

type Showcase {
  Category: [String]
  ItemDefaultUrl: String
  LastModified: Datetime
  PublicationDate: Datetime
  Results: String
  Solution: String
  Title: String
  Client: String
  Id: ID
  Provider: String
  Tags: [String]
  DateCreated: Datetime
  Download: Document
  IncludeInSitemap: Boolean
  UrlName: String
  Challenge: String
  Thumbnail: Image
  Website: String
}

input ShowcaseInput {
  Category: [String]
  ItemDefaultUrl: String
  LastModified: Datetime
  PublicationDate: Datetime
  Results: String
  Solution: String
  Title: String
  Client: String
  Id: String
  Provider: String
  Tags: [String]
  DateCreated: Datetime
  IncludeInSitemap: Boolean
  UrlName: String
  Challenge: String
  Website: String
}

type SiteDataSourceConfigViewModel {
  Links: [SiteDataSourceLinkViewModel]
  Name: String
  SampleLink: SiteDataSourceLinkViewModel
  Title: String
  AllowMultipleProviders: Boolean
  DependantDataSources: [String]
  IsChecked: Boolean
}

type ThumbnailModel {
  Size: String
  Title: String
  Url: String
}

type PropertyValueGroupContainer {
  ComponentId: String
  Properties: [PropertyValueContainer]
  PropertyLocalizationMode: String
  PropertyMetadata: [PropertyContainer]
  Caption: String
}

type ContentItem {
  DateCreated: Datetime
  Description: String
  Author: String
  Id: ID
  Provider: String
  IncludeInSitemap: Boolean
  LastModified: Datetime
  PublicationDate: Datetime
  Title: String
  UrlName: String
  Category: [String]
  Content: String
  Name: String
  Tags: [String]
}

input ContentItemInput {
  Title: String
  IncludeInSitemap: Boolean
  LastModified: Datetime
  PublicationDate: Datetime
  Tags: [String]
  UrlName: String
  Category: [String]
  Content: String
  Name: String
  DateCreated: Datetime
  Description: String
  Author: String
  Id: String
  Provider: String
}

type OperationCategory {
  Name: String
  Title: String
}

enum BulkOperationResultType {
  Error @meta(value: 2, valueType: int32)
  Success @meta(value: 0, valueType: int32)
  Warning @meta(value: 1, valueType: int32)
}

type FormDescription {
  Rules: String
  SuccessMessage: String
  DateCreated: Datetime
  Id: ID
  PublicationDate: Datetime
  Tags: [String]
  Title: String
  Category: [String]
  Description: String
  Provider: String
  DisplayStatus: [DisplayStatus]
  IncludeInSitemap: Boolean
  LastModified: Datetime
  Name: String
}

input FormDescriptionInput {
  Title: String
  DateCreated: Datetime
  Id: String
  PublicationDate: Datetime
  Tags: [String]
  Category: [String]
  Description: String
  Provider: String
  DisplayStatus: [DisplayStatus]
  IncludeInSitemap: Boolean
  LastModified: Datetime
  Name: String
  Rules: String
  SuccessMessage: String
}

type ExtendedFolder {
  PreviewItems: [MediaContent]
  Description: String
  LastUploaded: Datetime
  Id: String
  MaxLibrarySizeInKb: Int
  ParentId: String
  RootId: String
  Title: String
  Breadcrumb: [BreadcrumbItem]
  ChildrenCount: Int
  Storage: String
  TotalLibrarySizeInKb: Int
  RunningTask: String
  FoldersCount: Int
  LastUploadedBy: String
}

type CommentContract {
  ProfilePictureUrl: String
  DateCreated: Datetime
  Message: String
  Name: String
  ProfilePictureThumbnailUrl: String
}

enum ReorderPosition {
  Before @meta(value: 0, valueType: int32)
  Under @meta(value: 2, valueType: int32)
  After @meta(value: 1, valueType: int32)
}

enum PageTemplateCategoryType {
  CurrentlyUsed @meta(value: 1, valueType: int32)
  None @meta(value: 0, valueType: int32)
}

type Slide {
  ItemDefaultUrl: String
  Provider: String
  Subtitle: String
  UrlName: String
  DateCreated: Datetime
  Id: ID
  Image: Image
  InvertText: Boolean
  TextPosition: TextPosition
  industries: [String]
  IncludeInSitemap: Boolean
  LastModified: Datetime
  PublicationDate: Datetime
  Title: String
}

input SlideInput {
  LastModified: Datetime
  PublicationDate: Datetime
  Title: String
  IncludeInSitemap: Boolean
  Provider: String
  Subtitle: String
  UrlName: String
  ItemDefaultUrl: String
  DateCreated: Datetime
  InvertText: Boolean
  TextPosition: TextPosition
  industries: [String]
  Id: String
}

type FilterItem {
  Category: String
  Count: Int
  IsDynamicFilter: Boolean
  Name: String
  Parameters: FilterParameters
  Title: String
}

type Image {
  Ordinal: Float
  ThumbnailUrl: String
  AlternativeText: String
  Category: [String]
  Description: String
  LastModified: Datetime
  Title: String
  TotalSize: Int
  Width: Int
  Id: ID
  ItemDefaultUrl: String
  MimeType: String
  PublicationDate: Datetime
  Tags: [String]
  Author: String
  DateCreated: Datetime
  FolderId: String
  Parent: Album
  Provider: String
  Thumbnails: [ThumbnailModel]
  Url: String
  UrlName: String
  Extension: String
  Height: Int
  IncludeInSitemap: Boolean
  ParentId: String
}

input ImageInput {
  Author: String
  DateCreated: Datetime
  FolderId: String
  Tags: [String]
  Thumbnails: [ThumbnailModel]
  Url: String
  UrlName: String
  Extension: String
  Height: Int
  IncludeInSitemap: Boolean
  ParentId: String
  Provider: String
  ThumbnailUrl: String
  AlternativeText: String
  Category: [String]
  Description: String
  LastModified: Datetime
  Ordinal: Float
  TotalSize: Int
  Width: Int
  Id: String
  ItemDefaultUrl: String
  MimeType: String
  PublicationDate: Datetime
  Title: String
}

type Site {
  CultureKeys: [String]
  DefaultCultureKey: String
  DefaultFrontendTemplateId: String
  Id: ID
  IsOffline: Boolean
  Provider: String
  CulturesMap: [CultureModel]
  LiveUrl: String
  Name: String
  SiteMapRootNodeId: String
}

input SiteInput {
  CulturesMap: [CultureModel]
  LiveUrl: String
  Name: String
  SiteMapRootNodeId: String
  Provider: String
  CultureKeys: [String]
  DefaultCultureKey: String
  DefaultFrontendTemplateId: String
  Id: String
  IsOffline: Boolean
}

enum ConditionOperator {
  Equal @meta(value: 0, valueType: int32)
  FileSelected @meta(value: 8, valueType: int32)
  IsFilled @meta(value: 4, valueType: int32)
  IsGreaterThan @meta(value: 7, valueType: int32)
  IsLessThan @meta(value: 6, valueType: int32)
  NotContains @meta(value: 3, valueType: int32)
  NotEqual @meta(value: 1, valueType: int32)
  Contains @meta(value: 2, valueType: int32)
  FileNotSelected @meta(value: 9, valueType: int32)
  IsNotFilled @meta(value: 5, valueType: int32)
}

enum LogicalOperator {
  And @meta(value: 0, valueType: int32)
  Or @meta(value: 1, valueType: int32)
}

enum NotificationType {
  Error @meta(value: 2, valueType: int32)
  None @meta(value: 0, valueType: int32)
  Success @meta(value: 1, valueType: int32)
  Warning @meta(value: 3, valueType: int32)
}

type FieldSettings {
  AllowView: Boolean
  Key: String
  AllowCreate: Boolean
}

type Folder {
  ChildrenCount: Int
  CoverId: String
  Description: String
  Id: ID
  LastModified: Datetime
  Provider: String
  UrlName: String
  Breadcrumb: [BreadcrumbItem]
  RootId: String
  Title: String
  ParentId: String
}

input FolderInput {
  CoverId: String
  Description: String
  Id: String
  LastModified: Datetime
  Provider: String
  UrlName: String
  Breadcrumb: [BreadcrumbItem]
  ChildrenCount: Int
  Title: String
  ParentId: String
  RootId: String
}

type RendererData {
  IdentityServerHostHeaderValue: String
  SitefinityUrl: String
  Url: String
  WebService: String
  AuthRedirectUrl: String
  HostHeaderName: String
}

type ComponentDto {
  Id: String
  PlaceHolder: String
  SiblingId: String
  ViewName: String
  Caption: String
  Children: [ComponentDto]
  Lazy: Boolean
  Name: String
  Properties: PropertiesModel
}

type ParameterizedSetting {
  Name: String
  Parameters: PropertiesModel
  Value: String
}

type RelatedSiteInfo {
  Name: String
  Url: String
}

type OperationAction {
  Type: Int
  Name: String
  Title: String
}

type EditorState {
  AddAllowed: Boolean
  EditAllowed: Boolean
  HasChanged: Boolean
  SegmentId: String
  Version: Int
  WidgetState: [WidgetState]
}

enum ServiceHookActivityStatus {
  Successful @meta(value: 3, valueType: int32)
  Failed @meta(value: 2, valueType: int32)
  Pending @meta(value: 0, valueType: int32)
  Running @meta(value: 1, valueType: int32)
}

type ServiceHookSettingChoice {
  Module: String
  Name: String
  ParametersMetadata: [Section]
  Priority: Float
  Value: String
}

enum TaxonomyType {
  Flat @meta(value: 0, valueType: int32)
  Hierarchical @meta(value: 1, valueType: int32)
}

type Owner {
  UserEmail: String
  FullName: String
  Id: String
  ImageUrl: String
}

type DataProviderModel {
  isDefault: Boolean
  name: String
  title: String
}

type SiteConfiguration {
  IsDefaultSite: Boolean
  LiveUrl: String
}

type Blog {
  DateCreated: Datetime
  ItemDefaultUrl: String
  PublicationDate: Datetime
  UrlName: String
  Provider: String
  Title: String
  Description: String
  Id: ID
  IncludeInSitemap: Boolean
  LastModified: Datetime
}

input BlogInput {
  LastModified: Datetime
  Provider: String
  Title: String
  Description: String
  Id: String
  IncludeInSitemap: Boolean
  UrlName: String
  DateCreated: Datetime
  ItemDefaultUrl: String
  PublicationDate: Datetime
}

type List {
  Provider: String
  PublicationDate: Datetime
  SortOrder: String
  Title: String
  UrlName: String
  DateCreated: Datetime
  Description: String
  LastModified: Datetime
  Id: ID
  IncludeInSitemap: Boolean
}

input ListInput {
  Id: String
  IncludeInSitemap: Boolean
  Provider: String
  PublicationDate: Datetime
  SortOrder: String
  Title: String
  UrlName: String
  DateCreated: Datetime
  Description: String
  LastModified: Datetime
}

type ListItem {
  Category: [String]
  LastModified: Datetime
  Parent: List
  Title: String
  Provider: String
  DateCreated: Datetime
  Id: ID
  IncludeInSitemap: Boolean
  ParentId: String
  Content: String
  PublicationDate: Datetime
  Tags: [String]
  Description: String
  Ordinal: Float
  UrlName: String
}

input ListItemInput {
  Title: String
  Category: [String]
  LastModified: Datetime
  ParentId: String
  Provider: String
  DateCreated: Datetime
  Id: String
  IncludeInSitemap: Boolean
  Content: String
  PublicationDate: Datetime
  Tags: [String]
  Description: String
  Ordinal: Float
  UrlName: String
}

type DefaultExecuteOperationContext {
  WidgetKey: String
  WidgetSegmentId: String
  ActionName: String
  Name: String
  Parameters: [PropertyValueContainer]
  PropertyMetadata: [PropertyContainer]
}

type Taxonomy {
  RootTaxonomyId: String
  TaxaUrl: String
  Type: TaxonomyType
  Name: String
  TaxonName: String
  TaxonomySharedWith: Int
  DefaultTaxonName: String
  DefaultTitle: String
  Description: String
  Id: ID
  LastModified: Datetime
  Title: String
}

input TaxonomyInput {
  RootTaxonomyId: String
  TaxaUrl: String
  Type: TaxonomyType
  Name: String
  TaxonName: String
  TaxonomySharedWith: Int
  DefaultTaxonName: String
  DefaultTitle: String
  Description: String
  Id: String
  LastModified: Datetime
  Title: String
}

type BulkOperationResult {
  FailedItemsIds: [String]
  Message: String
  SucceededItemsIds: [String]
  Type: BulkOperationResultType
}

type PageTemplateCategory {
  Type: PageTemplateCategoryType
  Subtitle: String
  Templates: [Template]
  Title: String
}

type RedirectPage {
  NodeId: String
  OpenInNewWindow: Boolean
  ProviderName: String
  RedirectUrl: String
}

type PropertyValueContainer {
  Name: String
  Value: String
}

type PageNode {
  CodeBehindType: String
  DateCreated: Datetime
  OutputCacheProfile: String
  PageType: PageType
  ParentId: String
  Provider: String
  ViewUrl: String
  AvailableLanguages: [String]
  HasChildren: Boolean
  PublicationDate: Datetime
  RequireSsl: Boolean
  CanonicalUrlBehaviour: CanonicalUrlSettings
  EnableViewState: Boolean
  HeadTagContent: String
  Image: Image
  LastModified: Datetime
  Renderer: String
  RedirectPage: RedirectPage
  RootId: String
  TemplateId: String
  Description: String
  IsHomePage: Boolean
  ShowInNavigation: Boolean
  Title: String
  HtmlTitle: String
  Id: ID
  LocalizationStrategy: LocalizationStrategy
  RelativeUrlPath: String
  TemplateName: String
  EditUrl: String
  IncludeInSearchIndex: Boolean
  IncludeScriptManager: Boolean
  Priority: Float
  AllowParametersValidation: Boolean
  Breadcrumb: [String]
  Crawlable: Boolean
  UrlName: String
}

input PageNodeInput {
  AvailableLanguages: [String]
  HasChildren: Boolean
  PublicationDate: Datetime
  RequireSsl: Boolean
  LastModified: Datetime
  Renderer: String
  CanonicalUrlBehaviour: CanonicalUrlSettings
  EnableViewState: Boolean
  HeadTagContent: String
  RedirectPage: RedirectPage
  RootId: String
  TemplateId: String
  Description: String
  IsHomePage: Boolean
  ShowInNavigation: Boolean
  Title: String
  TemplateName: String
  HtmlTitle: String
  Id: String
  LocalizationStrategy: LocalizationStrategy
  RelativeUrlPath: String
  EditUrl: String
  IncludeInSearchIndex: Boolean
  IncludeScriptManager: Boolean
  Priority: Float
  AllowParametersValidation: Boolean
  Breadcrumb: [String]
  Crawlable: Boolean
  UrlName: String
  ParentId: String
  Provider: String
  ViewUrl: String
  CodeBehindType: String
  DateCreated: Datetime
  OutputCacheProfile: String
  PageType: PageType
}

type HierarchicalWidgetModelResponse {
  Name: String
  PlaceHolder: String
  SiblingId: String
  Caption: String
  Children: [ComponentDto]
  Id: String
  Lazy: Boolean
  Properties: PropertiesModel
  ViewName: String
  WidgetState: [WidgetState]
}

type ComponentContext {
  Components: [ComponentDto]
  HasLazyComponents: Boolean
  OrphanedControls: [ComponentDto]
}

type AnalyticsSettingsDto {
  Configured: Boolean
  Installed: Boolean
  ItemSupport: Boolean
}

type BlogPost {
  Tags: [String]
  IncludeInSitemap: Boolean
  Content: String
  Summary: String
  UrlName: String
  Category: [String]
  Comments: [CommentContract]
  Id: ID
  ParentId: String
  Provider: String
  PublicationDate: Datetime
  Title: String
  AllowComments: Boolean
  Description: String
  ItemDefaultUrl: String
  LastModified: Datetime
  Parent: Blog
  DateCreated: Datetime
}

input BlogPostInput {
  ItemDefaultUrl: String
  LastModified: Datetime
  DateCreated: Datetime
  Description: String
  IncludeInSitemap: Boolean
  Tags: [String]
  Summary: String
  UrlName: String
  Category: [String]
  Content: String
  Id: String
  ParentId: String
  Provider: String
  PublicationDate: Datetime
  Title: String
  AllowComments: Boolean
  Comments: [CommentContract]
}

type ThumbnailModel {
  Width: Int
  Height: Int
  MimeType: String
  Title: String
  Url: String
}

type ComponentsResponseWithState {
  Components: [ComponentDto]
  WidgetState: [WidgetState]
}

type PropertyContainer {
  TypeChildProperties: [PropertyContainer]
  DefaultValue: String
  Name: String
  Properties: PropertiesModel
  Title: String
  Type: String
}

