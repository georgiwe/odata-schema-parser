type Location {
  City: City
  Address: String
}

type Person {
  AddressInfo: [Location]
  Concurrency: Int
  Emails: [String]
  FirstName: String
  Gender: PersonGender
  Photo: Photo
  Friends: [Person]
  LastName: String
  Trips: [Trip]
  UserName: ID
}

input PersonInput {
  UserName: String
  LastName: String
  Emails: [String]
  FirstName: String
  Gender: PersonGender
  AddressInfo: [Location]
  Concurrency: Int
}

type Photo {
  Id: ID
  Name: String
}

input PhotoInput {
  Id: Int
  Name: String
}

type PlanItem {
  ConfirmationCode: String
  Duration: Duration
  EndsAt: Datetime
  PlanItemId: ID
  StartsAt: Datetime
}

input PlanItemInput {
  ConfirmationCode: String
  Duration: Duration
  EndsAt: Datetime
  PlanItemId: Int
  StartsAt: Datetime
}

type Airline {
  AirlineCode: ID
  Name: String
}

input AirlineInput {
  AirlineCode: String
  Name: String
}

type AirportLocation {
  Loc: Geopoint
}

type Trip {
  Photos: [Photo]
  PlanItems: [PlanItem]
  ShareId: String
  Tags: [String]
  Description: String
  EndsAt: Datetime
  Name: String
  Budget: Float
  StartsAt: Datetime
  TripId: ID
}

input TripInput {
  Tags: [String]
  Description: String
  EndsAt: Datetime
  Name: String
  ShareId: String
  Budget: Float
  StartsAt: Datetime
  TripId: Int
}

type Event {
  ConfirmationCode: String
  Description: String
  Duration: Duration
  EndsAt: Datetime
  OccursAt: EventLocation
  PlanItemId: ID
  StartsAt: Datetime
}

input EventInput {
  ConfirmationCode: String
  Description: String
  Duration: Duration
  EndsAt: Datetime
  OccursAt: EventLocation
  PlanItemId: Int
  StartsAt: Datetime
}

type EventLocation {
  BuildingInfo: String
}

type Flight {
  Duration: Duration
  EndsAt: Datetime
  FlightNumber: String
  To: Airport
  Airline: Airline
  ConfirmationCode: String
  From: Airport
  PlanItemId: ID
  SeatNumber: String
  StartsAt: Datetime
}

input FlightInput {
  FlightNumber: String
  Duration: Duration
  EndsAt: Datetime
  PlanItemId: Int
  SeatNumber: String
  StartsAt: Datetime
  ConfirmationCode: String
}

type PublicTransportation {
  ConfirmationCode: String
  Duration: Duration
  EndsAt: Datetime
  PlanItemId: ID
  SeatNumber: String
  StartsAt: Datetime
}

input PublicTransportationInput {
  EndsAt: Datetime
  PlanItemId: Int
  SeatNumber: String
  StartsAt: Datetime
  ConfirmationCode: String
  Duration: Duration
}

type Airport {
  IataCode: String
  IcaoCode: ID
  Location: AirportLocation
  Name: String
}

input AirportInput {
  IataCode: String
  IcaoCode: String
  Location: AirportLocation
  Name: String
}

type City {
  CountryRegion: String
  Name: String
  Region: String
}

enum PersonGender {
  Female @meta(value: 1, valueType: int32)
  Male @meta(value: 0, valueType: int32)
  Unknown @meta(value: 2, valueType: int32)
}

